# allow traffic via http
server {
    server_name citation.crosscite.org citation.test.crosscite.org;
    listen 80;
    resolver <%= @resolver %>;
    set $backend http://<%= @backend %>;

    location /citeproc {
        rewrite ^/citeproc/(.*)$ /$1 permanent;
    }

    location /cn {
        return 301 http://citation.crosscite.org/docs.html;
    }

    location /basic_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }

    location / {
        proxy_pass $backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        include /etc/nginx/proxy;
        include /etc/nginx/cors;
    }
}

server {
    server_name citation.datacite.org citation.test.datacite.org;
    listen 8080;
    resolver <%= @resolver %>;
    set $backend http://<%= @backend %>;

    location /basic_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }

    location / {
        proxy_pass $backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        include /etc/nginx/proxy;
        include /etc/nginx/cors;
        <%= @test_string %>
    }
}
